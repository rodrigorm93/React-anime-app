{"version":3,"sources":["components/MenuApp.js","components/CarouselsApp.js","hooks/useFetch.js","components/ModalVideo.js","hooks/useCounter.js","components/ListAnime.js","AnimeApp.js","index.js"],"names":["SubMenu","Menu","MenuApp","gener","setGeneroSelec","current","generoSelec","className","onClick","e","key","selectedKeys","mode","theme","icon","SettingOutlined","title","ItemGroup","map","genero","index","Item","CarouselsApp","topAnime","Carousel","slice","topAnime_selec","src","image_url","alt","Caption","href","url","useFetch","useState","data","loading","error","state","setstate","useEffect","fetch","then","resp","json","ModalVideo","props","isOpen","close","keyVideo","promo","Spinner","animation","role","visible","centered","onCancel","footer","video_url","playing","Meta","Card","ListAnime","initialState","counter","setCounter","increment","decrement","reset","useCounter","anime","isVisibleModal","setVisibleModal","setKeyVideo","animes_selec","Animes","Button","variant","synopsis","mal_id","getKeyVideo","hoverable","cover","description","substring","AnimeApp","top","Container","fluid","Row","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.12aa8e26.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport { SettingOutlined } from \"@ant-design/icons\";\r\n\r\nimport \"./MenuApp.css\";\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nexport const MenuApp = ({ gener, setGeneroSelec, generoSelec }) => {\r\n  const handleClick = (e) => {\r\n    setGeneroSelec({ current: e.key });\r\n  };\r\n\r\n  const { current } = generoSelec;\r\n\r\n  return (\r\n    <div className=\"menu-app\">\r\n      <Menu\r\n        onClick={handleClick}\r\n        selectedKeys={[current]}\r\n        mode=\"horizontal\"\r\n        theme=\"dark\"\r\n      >\r\n        <SubMenu icon={<SettingOutlined />} title=\"Anime\">\r\n          <Menu.ItemGroup title=\"Genero\">\r\n            {gener.map((genero, index) => (\r\n              <Menu.Item key={index + 1}>{genero}</Menu.Item>\r\n            ))}\r\n          </Menu.ItemGroup>\r\n        </SubMenu>\r\n        <SubMenu icon={<SettingOutlined />} title=\"Manga\">\r\n          <Menu.ItemGroup title=\"Genero\">\r\n            {gener.map((genero) => (\r\n              <Menu.Item key={genero}>{genero}</Menu.Item>\r\n            ))}\r\n          </Menu.ItemGroup>\r\n        </SubMenu>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Carousel } from \"react-bootstrap\";\r\n\r\nimport \"./CarouselsApp.scss\";\r\n\r\nexport const CarouselsApp = ({ topAnime }) => {\r\n  return (\r\n    <Carousel className=\"carousels-app\">\r\n      {topAnime.slice(0, 20).map((topAnime_selec) => (\r\n        <Carousel.Item key={topAnime_selec.title}>\r\n          <img src={topAnime_selec.image_url} alt={topAnime_selec.title} />\r\n\r\n          <Carousel.Caption>\r\n            <h3>{topAnime_selec.title}</h3>\r\n            <p>\r\n              <a href={topAnime_selec.url}>Descripci√≥n</a>\r\n            </p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport const useFetch = (url) => {\r\n  const [state, setstate] = useState({\r\n    data: null,\r\n    loading: true,\r\n    error: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setstate({ data: null, loading: true, error: null });\r\n    fetch(url)\r\n      .then((resp) => resp.json())\r\n      .then((data) => {\r\n        setstate({\r\n          loading: false,\r\n          error: false,\r\n          data,\r\n        });\r\n      });\r\n  }, [url]);\r\n\r\n  return state;\r\n};\r\n","import React from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nimport \"./ModalVideo.scss\";\r\nimport { useFetch } from \"../hooks/useFetch\";\r\n\r\nexport default function ModalVideo(props) {\r\n  const { isOpen, close, keyVideo } = props;\r\n\r\n  const url = `https://api.jikan.moe/v3/anime/${keyVideo}/videos`;\r\n  const { data, loading } = useFetch(url);\r\n  const { promo } = !!data && data; //si viene la data toammos la primea posicion, !! transformamo el null en false\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      ) : (\r\n        <Modal\r\n          className=\"modal-video\"\r\n          visible={isOpen}\r\n          centered\r\n          onCancel={close}\r\n          footer={false}\r\n        >\r\n          <ReactPlayer url={promo[0].video_url} playing={isOpen} />\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nexport const useCounter = (initialState = 10) => {\r\n  const [counter, setCounter] = useState(initialState);\r\n\r\n  const increment = () => {\r\n    setCounter(counter + 1);\r\n  };\r\n\r\n  const decrement = () => {\r\n    setCounter(counter - 1);\r\n  };\r\n  const reset = () => {\r\n    setCounter(initialState);\r\n  };\r\n\r\n  return {\r\n    counter,\r\n    increment,\r\n    decrement,\r\n    reset,\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Card } from \"antd\";\r\nimport { Spinner, Button } from \"react-bootstrap\";\r\nimport \"./ListAnime.scss\";\r\nimport ModalVideo from \"./ModalVideo\";\r\nimport { useFetch } from \"../hooks/useFetch\";\r\nimport { useCounter } from \"../hooks/useCounter\";\r\nconst { Meta } = Card;\r\n\r\nexport const ListAnime = ({ generoSelec }) => {\r\n  const { counter, increment } = useCounter(1);\r\n\r\n  //lista de animes\r\n  const url = `https://api.jikan.moe/v3/genre/anime/${generoSelec.current}/${counter}`;\r\n  const { data, loading } = useFetch(url);\r\n  const { anime } = !!data && data; //si viene la data toammos la primea posicion, !! transformamo el null en false\r\n\r\n  const [isVisibleModal, setVisibleModal] = useState(false);\r\n  const [keyVideo, setKeyVideo] = useState(\"1\");\r\n\r\n  //Funcion para abrir el modal y cerrar\r\n  const closeModal = () => {\r\n    setVisibleModal(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      ) : (\r\n        <>\r\n          {anime.map((animes_selec) => (\r\n            <Animes\r\n              key={animes_selec.title}\r\n              animes_selec={animes_selec}\r\n              setKeyVideo={setKeyVideo}\r\n              setVisibleModal={setVisibleModal}\r\n              increment={increment}\r\n            />\r\n          ))}\r\n        </>\r\n      )}\r\n\r\n      <div className=\"btn-list-anime\">\r\n        <Button onClick={increment} variant=\"outline-secondary\">\r\n          Siguiente\r\n        </Button>\r\n      </div>\r\n\r\n      <ModalVideo\r\n        keyVideo={keyVideo}\r\n        isOpen={isVisibleModal}\r\n        close={closeModal}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nfunction Animes(props) {\r\n  const {\r\n    animes_selec: { image_url, synopsis, title, url, mal_id },\r\n    setKeyVideo,\r\n    setVisibleModal,\r\n  } = props; //hacemos un doble destructuring a movie para sacar compoennete de la pelicula\r\n  const openModal = () => setVisibleModal(true);\r\n  const getKeyVideo = (mal_id) => {\r\n    openModal();\r\n    setKeyVideo(mal_id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-div\">\r\n      <Card\r\n        className=\"card-list\"\r\n        hoverable\r\n        cover={\r\n          <img\r\n            alt=\"example\"\r\n            src={image_url}\r\n            onClick={() => getKeyVideo(mal_id)}\r\n          />\r\n        }\r\n      >\r\n        {synopsis ? (\r\n          <Meta title={title} description={synopsis.substring(0, 50)} />\r\n        ) : (\r\n          <Meta title={title} />\r\n        )}\r\n        <a href={url}>M√°s...</a>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport { MenuApp } from \"./components/MenuApp\";\n\nimport \"./AnimeApp.css\";\nimport { CarouselsApp } from \"./components/CarouselsApp\";\nimport { ListAnime } from \"./components/ListAnime\";\nimport { Row, Container, Spinner } from \"react-bootstrap\";\n\nimport \"./AnimeApp.css\";\nimport { useFetch } from \"./hooks/useFetch\";\nexport const AnimeApp = () => {\n  //const [gener, setGener] = useState([\"Action\", \"Adventure\", \"Cars\", \"Comedy\"]);\n  const gener = [\"Action\", \"Adventure\", \"Cars\", \"Comedy\"];\n  const [generoSelec, setGeneroSelec] = useState({\n    current: 1,\n  });\n\n  //cargar los top anime\n  const url = \"https://api.jikan.moe/v3/top/anime/1/upcoming\";\n  const { data, loading } = useFetch(url);\n  const topAnime = !!data && data.top; //si viene la data toammos la primea posicion, !! transformamo el null en false\n\n  return (\n    <Container fluid className=\"container-app\">\n      <Row>\n        <MenuApp\n          gener={gener}\n          setGeneroSelec={setGeneroSelec}\n          generoSelec={generoSelec}\n        />\n      </Row>\n      <Row>\n        {loading ? (\n          <Spinner animation=\"border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </Spinner>\n        ) : (\n          <CarouselsApp topAnime={topAnime} />\n        )}\n      </Row>\n\n      <Row>\n        <ListAnime generoSelec={generoSelec} />\n      </Row>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { AnimeApp } from \"./AnimeApp\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"antd/dist/antd.css\"; // or 'antd/dist/antd.less'\n\nReactDOM.render(<AnimeApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}