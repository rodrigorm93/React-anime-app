{"version":3,"sources":["components/MenuApp.js","components/CarouselsApp.js","helpers/getGeneros.js","helpers/getVideoAnime.js","components/ModalVideo.js","components/ListAnime.js","hooks/useFetchGener.js","helpers/getTopAnime.js","AnimeApp.js","hooks/useFetchTopAnime.js","index.js"],"names":["SubMenu","Menu","MenuApp","gener","setGeneroSelec","generoSelec","current","console","log","className","onClick","e","key","selectedKeys","mode","theme","icon","SettingOutlined","title","ItemGroup","map","genero","index","Item","CarouselsApp","topAnime","Carousel","topAnime_selec","src","image_url","alt","Caption","href","url","getGenero","a","fetch","resp","json","data","animes","anime","img","synopsis","mal_id","getVideoAnime","keyVideo","url_video","promo","ModalVideo","props","isOpen","close","setUrlVideo","urlVideo","useEffect","then","video","length","video_url","visible","centered","onCancel","footer","playing","Card","Meta","ListAnime","useState","loading","state","setstate","imgs","useFetchGener","imagesAnime","isVisibleModal","setVisibleModal","Spinner","animation","role","animes_selec","getTopAnime","topanimes_data","top","slice","AnimeApp","useFetchTopAnime","Container","fluid","Row","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74a21ba8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Menu } from \"antd\";\r\nimport { SettingOutlined } from \"@ant-design/icons\";\r\n\r\nimport \"./MenuApp.css\";\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nexport const MenuApp = ({ gener, setGeneroSelec, generoSelec }) => {\r\n  const handleClick = (e) => {\r\n    console.log(\"click \", e);\r\n    setGeneroSelec({ current: e.key });\r\n  };\r\n\r\n  const { current } = generoSelec;\r\n  console.log(generoSelec);\r\n\r\n  return (\r\n    <div className=\"menu-app\">\r\n      <Menu\r\n        onClick={handleClick}\r\n        selectedKeys={[current]}\r\n        mode=\"horizontal\"\r\n        theme=\"dark\"\r\n      >\r\n        <SubMenu icon={<SettingOutlined />} title=\"Anime\">\r\n          <Menu.ItemGroup title=\"Genero\">\r\n            {gener.map((genero, index) => (\r\n              <Menu.Item key={index + 1}>{genero}</Menu.Item>\r\n            ))}\r\n          </Menu.ItemGroup>\r\n        </SubMenu>\r\n        <SubMenu icon={<SettingOutlined />} title=\"Manga\">\r\n          <Menu.ItemGroup title=\"Genero\">\r\n            {gener.map((genero) => (\r\n              <Menu.Item key={genero}>{genero}</Menu.Item>\r\n            ))}\r\n          </Menu.ItemGroup>\r\n        </SubMenu>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Carousel } from \"react-bootstrap\";\r\n\r\nimport \"./CarouselsApp.scss\";\r\n\r\nexport const CarouselsApp = ({ topAnime }) => {\r\n  return (\r\n    <Carousel className=\"carousels-app\">\r\n      {topAnime.map((topAnime_selec) => (\r\n        <Carousel.Item key={topAnime_selec.title}>\r\n          <img src={topAnime_selec.image_url} alt={topAnime_selec.title} />\r\n\r\n          <Carousel.Caption>\r\n            <h3>{topAnime_selec.title}</h3>\r\n            <p>\r\n              <a href={topAnime_selec.url}>Descripci√≥n</a>\r\n            </p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  );\r\n};\r\n","export const getGenero = async (generoSelec) => {\r\n  const url = `https://api.jikan.moe/v3/genre/anime/${generoSelec.current}/1`;\r\n  const resp = await fetch(url);\r\n  const data = await resp.json(); //slice(0, 50)\r\n  const animes = data.anime.map((img) => {\r\n    return {\r\n      image_url: img.image_url,\r\n      title: img.title,\r\n      url: img.url,\r\n      synopsis: img.synopsis,\r\n      mal_id: img.mal_id,\r\n    };\r\n  });\r\n  console.log(\"ss\", data);\r\n  return animes;\r\n};\r\n","export const getVideoAnime = async (keyVideo) => {\r\n  const url = `https://api.jikan.moe/v3/anime/${keyVideo}/videos`;\r\n  const resp = await fetch(url);\r\n  const data = await resp.json(); //slice(0, 50)\r\n  const url_video = data.promo;\r\n\r\n  // console.log(\"s\", url_video);\r\n\r\n  return url_video;\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Modal } from \"antd\";\r\nimport ReactPlayer from \"react-player\";\r\n//import { useFetchVideo } from \"../hooks/useFetchVideo\";\r\n\r\nimport \"./ModalVideo.scss\";\r\nimport { getVideoAnime } from \"../helpers/getVideoAnime\";\r\n\r\nexport default function ModalVideo(props) {\r\n  //isOpen =es el estado del modal si esta abierto o cerrado\r\n  const { isOpen, close, keyVideo, setUrlVideo, urlVideo } = props;\r\n  //const [urlVideo, setUrlVideo] = useState(\"\");\r\n\r\n  //const { data, loading } = useFetchVideo(keyVideo, setUrlVideo);\r\n  //useFetchVideo(keyVideo, setUrlVideo);\r\n  //let urlVideo2 = null;\r\n\r\n  useEffect(() => {\r\n    getVideoAnime(keyVideo).then((video) => {\r\n      if (video.length > 0) {\r\n        setUrlVideo(video[0].video_url);\r\n      } else {\r\n        setUrlVideo(video.video_url);\r\n      }\r\n    });\r\n  }, [keyVideo]);\r\n\r\n  //if (data.length > 0) {\r\n  //urlVideo2 = data[0].video_url;\r\n  // setUrlVideo(data[0].video_url);\r\n  //} else {\r\n  //urlVideo2 = data.video_url;\r\n  //setUrlVideo(data.video_url);\r\n  // }\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        className=\"modal-video\"\r\n        visible={isOpen}\r\n        centered\r\n        onCancel={close}\r\n        footer={false}\r\n      >\r\n        <ReactPlayer url={urlVideo} playing={isOpen} />\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Card } from \"antd\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport \"./ListAnime.scss\";\r\nimport { useFetchGener } from \"../hooks/useFetchGener\";\r\nimport ModalVideo from \"./ModalVideo\";\r\nconst { Meta } = Card;\r\n\r\nexport const ListAnime = ({ generoSelec }) => {\r\n  const { data: imagesAnime, loading } = useFetchGener(generoSelec);\r\n\r\n  const [isVisibleModal, setVisibleModal] = useState(false);\r\n  const [keyVideo, setKeyVideo] = useState(\"1\");\r\n  const [urlVideo, setUrlVideo] = useState(\"\");\r\n  //Funcion para abrir el modal y cerrar\r\n  console.log(\"url_video:\", urlVideo);\r\n  const closeModal = () => {\r\n    setVisibleModal(false);\r\n    setUrlVideo(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading && (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n      )}\r\n      {imagesAnime.map((animes_selec) => (\r\n        //<Col className=\"card-list\"></Col>\r\n        <Animes\r\n          key={animes_selec.title}\r\n          animes_selec={animes_selec}\r\n          setKeyVideo={setKeyVideo}\r\n          setVisibleModal={setVisibleModal}\r\n        />\r\n      ))}\r\n      <ModalVideo\r\n        keyVideo={keyVideo}\r\n        isOpen={isVisibleModal}\r\n        close={closeModal}\r\n        setUrlVideo={setUrlVideo}\r\n        urlVideo={urlVideo}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nfunction Animes(props) {\r\n  const {\r\n    animes_selec: { image_url, synopsis, title, url, mal_id },\r\n    setKeyVideo,\r\n    setVisibleModal,\r\n  } = props; //hacemos un doble destructuring a movie para sacar compoennete de la pelicula\r\n  const openModal = () => setVisibleModal(true);\r\n  const getKeyVideo = (mal_id) => {\r\n    openModal();\r\n    setKeyVideo(mal_id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-div\">\r\n      <Card\r\n        className=\"card-list\"\r\n        hoverable\r\n        cover={\r\n          <img\r\n            alt=\"example\"\r\n            src={image_url}\r\n            onClick={() => getKeyVideo(mal_id)}\r\n          />\r\n        }\r\n      >\r\n        {synopsis ? (\r\n          <Meta title={title} description={synopsis.substring(0, 50)} />\r\n        ) : (\r\n          <Meta title={title} />\r\n        )}\r\n        <a href={url}>M√°s...</a>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGenero } from \"../helpers/getGeneros\";\r\n\r\nexport const useFetchGener = (generoSelec) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGenero(generoSelec).then((imgs) =>\r\n      setstate({\r\n        data: imgs,\r\n        loading: false,\r\n      })\r\n    );\r\n  }, [generoSelec]);\r\n\r\n  return state;\r\n};\r\n","export const getTopAnime = async () => {\r\n  const url = \"https://api.jikan.moe/v3/top/anime/1/upcoming\";\r\n  const resp = await fetch(url);\r\n  const data = await resp.json();\r\n  const topanimes_data = data.top.slice(0, 20).map((img) => {\r\n    return {\r\n      image_url: img.image_url,\r\n      title: img.title,\r\n      url: img.url,\r\n    };\r\n  });\r\n  return topanimes_data;\r\n};\r\n","import React, { useState } from \"react\";\nimport { MenuApp } from \"./components/MenuApp\";\n\nimport \"./AnimeApp.css\";\nimport { CarouselsApp } from \"./components/CarouselsApp\";\nimport { ListAnime } from \"./components/ListAnime\";\nimport { Row, Container } from \"react-bootstrap\";\nimport { useFetchTopAnime } from \"./hooks/useFetchTopAnime\";\n\nimport \"./AnimeApp.css\";\nexport const AnimeApp = () => {\n  //const [gener, setGener] = useState([\"Action\", \"Adventure\", \"Cars\", \"Comedy\"]);\n  const gener = [\"Action\", \"Adventure\", \"Cars\", \"Comedy\"];\n  const [generoSelec, setGeneroSelec] = useState({\n    current: 1,\n  });\n\n  const { data: topAnime, loading } = useFetchTopAnime();\n  return (\n    <Container fluid className=\"container-app\">\n      <Row>\n        <MenuApp\n          gener={gener}\n          setGeneroSelec={setGeneroSelec}\n          generoSelec={generoSelec}\n        />\n      </Row>\n      <Row>\n        <CarouselsApp topAnime={topAnime} />\n      </Row>\n\n      <Row>\n        <ListAnime generoSelec={generoSelec} />\n      </Row>\n    </Container>\n  );\n};\n","import { useEffect, useState } from \"react\";\r\nimport { getTopAnime } from \"../helpers/getTopAnime\";\r\n\r\nexport const useFetchTopAnime = () => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getTopAnime().then((img) => {\r\n      setstate({\r\n        data: img,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return state;\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { AnimeApp } from \"./AnimeApp\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"antd/dist/antd.css\"; // or 'antd/dist/antd.less'\n\nReactDOM.render(<AnimeApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}